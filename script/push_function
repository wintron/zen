#!/bin/bash
# A wrapper around `aws lambda create-function` to create a new Lambda function

# Exit immediately if a command exits with a non-zero status
set -e

function usage() {
    if [[ $# -eq 0 ]] ; then
        echo "$(basename ${0}) <function-name> <path>"
        exit 0
    fi
}

function build_package() {
    # Prepare package for deploy
    source=$(mktemp -d)
    dest=$(mktemp -d)

    cp -r "$1" $source

    cd "$source"
    zip -r "${dest}/package.zip" . >/dev/null

    # TODO
    # Include dependencies
    # ...

    echo "${dest}/package.zip"
}


function main() {
    # Check usage
    usage "$@"

    function_name="$1"
    path="$2"
    package=$( build_package "${path}" )

    # Copy package to S3
    aws s3 cp "${package}" s3://wintronio/lambda/ >/dev/null

    # Lambda options
    opts=()
    opts+=("--publish")
    opts+=("--runtime"); opts+=("python2.7")
    opts+=("--role"); opts+=("arn:aws:iam::543863283762:role/service-role/default")
    opts+=("--handler"); opts+=("lambda_function.lambda_handler")
    opts+=("--function-name"); opts+=("${function_name}")
    opts+=("--code"); opts+=("S3Bucket=wintronio,S3Key=lambda/package.zip")

    # Create function on Lambda
    aws lambda create-function ${opts[@]}

    # echo "${function_name} pushed... ${package}"
}

main "$@"
