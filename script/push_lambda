#!/bin/bash
# A wrapper around `aws lambda create-function` to create a new Lambda function

# Exit immediately if a command exits with a non-zero status
set -e

function usage() {
    if [[ $# -eq 0 ]] ; then
        echo "$(basename ${0}) <function-name> <path>"
        exit 0
    fi
}

function build_package() {
    # Prepare package for deploy
    source=$(mktemp -d)
    dest=$(mktemp -d)

    cp -r "$1" $source

    cd "$source"
    zip -r "${dest}/package.zip" . >/dev/null

    # TODO
    # Include dependencies
    # ...

    echo "${dest}/package.zip"
}

function exists() {
    # Returns true if function already exists
    function_name="$1"

    # Attempt to get-function, this will return a non-zero exist code if
    # the function doesn't exist
    aws lambda get-function --function-name "${function_name}" >/dev/null 2>&1

    if [[ $? -eq 0 ]]
    then
        # get-function didn't error, therefore function exists, return true
        # 0 = true!
        return 0
    else
        # get-function errored, therefore function does not exist, return false
        # 1 = false!
        return 1
    fi
}

function create() {
    function_name="$1"
    package="$2"

    # Copy package to S3
    aws s3 cp "${package}" s3://wintronio/lambda/ >/dev/null

    # Lambda options
    opts=()
    opts+=("--publish")
    opts+=("--runtime"); opts+=("python2.7")
    opts+=("--role"); opts+=("arn:aws:iam::543863283762:role/service-role/default")
    opts+=("--handler"); opts+=("lambda_function.lambda_handler")
    opts+=("--function-name"); opts+=("${function_name}")
    opts+=("--code"); opts+=("S3Bucket=wintronio,S3Key=lambda/package.zip")

    # Create function on Lambda
    aws lambda create-function ${opts[@]}
}

function main() {
    # Check usage
    usage "$@"

    function_name="$1"
    path="$2"

    # Build package from path
    package=$( build_package "${path}" )

    if exists "$function_name"
    then
        echo "$function_name exists, delete it first"
        exit 0
    else
        create "$function_name" "$package"
    fi
}

main "$@"
